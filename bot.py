import telebot
import config

from telebot import types
from db import BotDB


bot = telebot.TeleBot(config.TOKEN)
bot_name = bot.get_me().first_name
db_file=config.db_file
db = BotDB(db_file=db_file)



def greeting_text(message):
    user = message.from_user
    return (
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üôã‚Äç‚ôÇÔ∏è \n"
        f"–Ø - <b>{bot_name}</b>, –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –∫—É–ø–∏—Ç—å, "
        f"–ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–π—Å—è —Ä–∏—Å—É–Ω–æ–∫ –∏–∑ –Ω–∞—à–µ–π –æ–Ω–ª–∞–π–Ω-–≥–∞–ª–µ—Ä–µ–∏ –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ –Ω–∞—à—É –≥–∞–ª–µ—Ä–µ—é —Å–≤–æ—é –∫–∞—Ä—Ç–∏–Ω—É."
    )


@bot.message_handler(commands=['start'])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("–ö—É–ø–∏—Ç—å —Ä–∞–±–æ—Ç—É ü§ó")
    button2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É üíå")
    button3 = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—Ç—ã üñº")
    button4 = types.KeyboardButton("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üîÑ")

    markup.add(button1, button2, button3, button4)

    pic = open('/Users/evangelinaschnaider/Desktop/programming/IZO_BOT/sun.jpg', 'rb')
    bot.send_photo(message.chat.id, pic)
    bot.send_message(message.chat.id, greeting_text(message), parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def main_logic(message):
    if message.chat.type == 'private':
        #print(len((message.text).split(",")))
        if message.text == '–ö—É–ø–∏—Ç—å —Ä–∞–±–æ—Ç—É ü§ó':
            bot.send_message(message.chat.id,
                             str("–ó–¥–æ—Ä–æ–≤–æ! –†–∞–±–æ—Ç–∞ —Å—Ç–∞–Ω–µ—Ç –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–º —É–∫—Ä–∞—à–µ–Ω–∏–µ–º –≤–∞—à–µ–≥–æ –¥–æ–º–∞, –∞ –µ—â–µ –ø–æ–∫—É–ø–∫–æ–π –≤—ã –∫–æ–º—É-—Ç–æ –æ—â—É—Ç–∏–º–æ –ø–æ–º–æ–∂–µ—Ç–µ.üé®"))
            bot.send_message(message.chat.id,
                             str("–í –∏–Ω—Å—Ç–∞–≥—Ä–∞–º–µ –≤ –ø–æ–¥–ø–∏—Å–∏ –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –Ω–æ–º–µ—Ä. –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ —Å—é–¥–∞ –≤ —á–∞—Ç,  —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –≤ –Ω–∞–ª–∏—á–∏–∏ ‚¨á"))
        elif message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É üíå':
            bot.send_message(message.chat.id, str("to be developed"))
        elif message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—Ç—ã üñº':
            bot.send_message(message.chat.id,
                             str("–ù–∞—à–∞ –æ–Ω–ª–∞–π–Ω-–≥–∞–ª–µ—Ä–µ—è: https://instagram.com/eva_schneider15?igshid=YmMyMTA2M2Y= "))
        elif message.text == '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üîÑ':
            bot.send_message(message.chat.id,
                             str("–ü–µ—Ä–µ–π–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤ —á–∞—Ç https://t.me/Eva_Schneider1 –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–µ."))

        elif len((message.text).split(",")) == 1 and int(message.text) >= 1 and int(message.text) <= 100:
            picture_number = int(message.text)
            print(picture_number)
            pic_availab=db.pic_availability(picture_number) #–ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ä–∏—Å—É–Ω–æ–∫ –≤ –Ω–∞–ª–∏—á–∏–∏
            print(f"x={pic_availab[0]}")


            if int(pic_availab[0])==0:  # —Ä–∏—Å—É–Ω–æ–∫ –≤ –±–∞–∑–µ- –µ–≥–æ —É–∂–µ –∫—É–ø–∏–ª–∏
                bot.send_message(message.chat.id,
                                 str("–ù–∞–º –æ—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ –∫—Ç–æ-—Ç–æ —É—Å–ø–µ–ª –∫—É–ø–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–æ –≤–∞—Å. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –º–æ–∂–µ—Ç –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –∫–∞–∫–∞—è-—Ç–æ –µ—â–µ."))

            else:  # —Ä–∏—Å—É–Ω–æ–∫ –≤ –±–∞–∑–µ- –µ–≥–æ –µ—â–µ –ù–ï –∫—É–ø–∏–ª–∏
                markup = types.InlineKeyboardMarkup(row_width=2)
                option1 = types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ', callback_data='buy')
                option2 = types.InlineKeyboardButton('–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏', callback_data='count')
                markup.add(option1, option2)
                bot.send_message(message.chat.id,
                                 str("–•–æ—Ç–∏–º –≤–∞—Å –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞ —Å—á–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—è. –ú—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞. –î–æ –ë–µ—Ä–ª–∏–Ω–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç–æ–∏—Ç –æ–∫–æ–ª–æ 300 —Ä—É–±."),
                                 reply_markup=markup)

        elif len((message.text).split(",")) > 5:
            client_adress = message.text
            markup = types.InlineKeyboardMarkup(row_width=2)
            option1 = types.InlineKeyboardButton('–†–æ—Å—Å–∏–π—Å–∫–∏–π', callback_data='russia')
            option2 = types.InlineKeyboardButton('–í–Ω–µ –†–æ—Å—Å–∏–∏', callback_data='not_russia')
            markup.add(option1, option2)
            bot.send_message(message.chat.id,
                             str("–°–ø–∞—Å–∏–±–æ, –∞–¥—Ä–µ—Å –º—ã –ø–æ–ª—É—á–∏–ª–∏.üì¨ –ü–µ—Ä–µ–π–¥–µ–º –∫ –≤—ã–±–æ—Ä—É –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–Ω–µ –†–æ—Å—Å–∏–∏?"),
                             reply_markup=markup)

    print(type(message.text), message.text, len((message.text).split(",")))


@bot.callback_query_handler(func=lambda call: call.data == 'russia' or call.data == 'not_russia')
def count_delivery_price(call):
    if call.data == 'russia':
        markup = types.InlineKeyboardMarkup(row_width=3)
        option1 = types.InlineKeyboardButton('–ü—Ä–æ–µ–∫—Ç 1', callback_data='Rus_project1')
        option2 = types.InlineKeyboardButton('–ü—Ä–æ–µ–∫—Ç 2', callback_data='Rus_project2')
        option3 = types.InlineKeyboardButton('–ü—Ä–æ–µ–∫—Ç 3', callback_data='Rus_project3')
        markup.add(option1, option2, option3)
        bot.send_message(call.message.chat.id,
                         str("–¢—É—Ç –∫–æ—Ä–æ—Ç–∫–∏–π —Ä–∞—Å—Å–∫–∞–∑ –æ –∫–∞–∂–¥–æ–º –∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤. –ë—É–∫–≤–∞–ª—å–Ω–æ –≤ –æ–¥–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ (–∫–æ–º—É –ø–æ–º–æ–≥–∞—é—Ç, –Ω–∞ —á—Ç–æ –∏ —Å–∫–æ–ª—å–∫–æ —Å–æ–±–∏—Ä–∞—é—Ç+–°–°–´–õ–ö–ò) (Russia) –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ ‚¨á"),
                         reply_markup=markup)


    elif call.data == 'not_russia':
        markup = types.InlineKeyboardMarkup(row_width=3)
        option1 = types.InlineKeyboardButton('–ü—Ä–æ–µ–∫—Ç 1', callback_data='NOT_Rus_project1')
        option2 = types.InlineKeyboardButton('–ü—Ä–æ–µ–∫—Ç 2', callback_data='NOT_Rus_project2')
        option3 = types.InlineKeyboardButton('–ü—Ä–æ–µ–∫—Ç 3', callback_data='NOT_Rus_project3')
        markup.add(option1, option2, option3)
        bot.send_message(call.message.chat.id,
                         str('–¢—É—Ç –∫–æ—Ä–æ—Ç–∫–∏–π —Ä–∞—Å—Å–∫–∞–∑ –æ –∫–∞–∂–¥–æ–º –∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤. –ë—É–∫–≤–∞–ª—å–Ω–æ –≤ –æ–¥–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ (–∫–æ–º—É –ø–æ–º–æ–≥–∞—é—Ç, –Ω–∞ —á—Ç–æ –∏ —Å–∫–æ–ª—å–∫–æ —Å–æ–±–∏—Ä–∞—é—Ç+–°–°–´–õ–ö–ò) (NOT Russia) –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ ‚¨á'),
                         reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'count' or call.data == 'buy')
def count_delivery_price(call):
    if call.data == 'count':
        bot.send_message(call.message.chat.id,
                         str("–ü–µ—Ä–µ–π–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤ —á–∞—Ç https://t.me/Eva_Schneider1 –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å –ø–æ–¥–¥–µ—Ä–∂–∫–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏."))

    elif call.data == 'buy':
        bot.send_message(call.message.chat.id,
                         str('–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫—É–¥–∞ –æ—Ç–ø–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´–ò–Ω–¥–µ–∫—Å, –°—Ç—Ä–∞–Ω–∞, –ì–æ—Ä–æ–¥, –£–ª–∏—Ü–∞, –ù–æ–º–µ—Ä –¥–æ–º–∞, –ö–≤–∞—Ä—Ç–∏—Ä–∞, –§–ò–û –ø–æ–ª—É—á–∞—Ç–µ–ª—è¬ª.'))


@bot.callback_query_handler(func=lambda
        call: call.data == 'Rus_project1' or call.data == 'Rus_project2' or call.data == 'Rus_project3' or call.data == 'NOT_Rus_project1' or call.data == 'NOT_Rus_project2' or call.data == 'NOT_Rus_project3')
def choosing_project(call):
    if call.data == 'Rus_project1':
        bot.send_message(call.message.chat.id,
                         str("P–µ–∫–≤–∏–∑–∏—Ç—ã —Å –ø—Ä–∏–ø–∏—Å–∫–æ–π –æ —Ç–æ–º, —á—Ç–æ –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω.(Rus –ø—Ä–æ–µ–∫—Ç1)"))
    elif call.data == 'Rus_project2':
        bot.send_message(call.message.chat.id,
                         str("P–µ–∫–≤–∏–∑–∏—Ç—ã —Å –ø—Ä–∏–ø–∏—Å–∫–æ–π –æ —Ç–æ–º, —á—Ç–æ –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω.(Rus –ø—Ä–æ–µ–∫—Ç2)"))
    elif call.data == 'Rus_project3':
        bot.send_message(call.message.chat.id,
                         str("P–µ–∫–≤–∏–∑–∏—Ç—ã —Å –ø—Ä–∏–ø–∏—Å–∫–æ–π –æ —Ç–æ–º, —á—Ç–æ –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω.(Rus –ø—Ä–æ–µ–∫—Ç3)"))
    elif call.data == 'NOT_Rus_project1':
        bot.send_message(call.message.chat.id,
                         str("P–µ–∫–≤–∏–∑–∏—Ç—ã —Å –ø—Ä–∏–ø–∏—Å–∫–æ–π –æ —Ç–æ–º, —á—Ç–æ –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω.(NOT_Rus –ø—Ä–æ–µ–∫—Ç1)"))
    elif call.data == 'NOT_Rus_project2':
        bot.send_message(call.message.chat.id,
                         str("P–µ–∫–≤–∏–∑–∏—Ç—ã —Å –ø—Ä–∏–ø–∏—Å–∫–æ–π –æ —Ç–æ–º, —á—Ç–æ –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω.(NOT_Rus –ø—Ä–æ–µ–∫—Ç2)"))
    elif call.data == 'NOT_Rus_project3':
        bot.send_message(call.message.chat.id,
                         str("P–µ–∫–≤–∏–∑–∏—Ç—ã —Å –ø—Ä–∏–ø–∏—Å–∫–æ–π –æ —Ç–æ–º, —á—Ç–æ –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω.(NOT_Rus –ø—Ä–æ–µ–∫—Ç3)"))

    bot.send_message(call.message.chat.id,
                     str("–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ!üôè –ó–∞–≥—Ä—É–∑–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞—Ä—Ç–∏–Ω–∫—É —á–µ–∫–∞, —á—Ç–æ–±—ã –º—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥."))


@bot.message_handler(content_types=['photo'])
def bill_receive(message): #–ø–µ—Ä–µ—Å—ã–ª–∞–µ–º —á–µ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É
    forward_chat=-709087002 #id –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    bot.forward_message(chat_id=forward_chat, from_chat_id=message.chat.id, message_id=message.id)
    bot.send_message(message.chat.id, str("–ù–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –ö–∞–∫ –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è, –º—ã —Å—Ä–∞–∑—É –Ω–∞–ø–∏—à–µ–º."))
    print(message.chat.id)


# run the bot
bot.polling(none_stop=True)
